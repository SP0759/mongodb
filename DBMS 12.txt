//Sham Mane
//COTB13




import pymongo
client=pymongo.MongoClient("mongodb://localhost:27017/")
print(client)
mydb=client["mydb"]
mycol=mydb["Students"]
data={'name':'Sham','age':30}
mycol.insert_one(data)

data={'name':'Ram','age':40}
mycol.insert_one(data)

data={'name':'Lakhan','age':50}
mycol.insert_one(data)

data={'name':'Sumit','age':20}
mycol.insert_one(data)

data={'name':'Jeevan','age':21}
mycol.insert_one(data)

data={'name':'Samarth','age':23}
mycol.insert_one(data)

for data in mycol.find({}):
    print(data)
    print()


print("find Specific field ,using specific key and value:")
for data in mycol.find({'age':20}):
   print(data)
   print()


#Update /Edit Specific field ,using specific key ,method and values and update_one()

mycol.update_one(
     {'name':'Samarth'},
     {
         "$set":{
             'age':21
       }
     }
)

print("Updated the record ")
print()


#Delete / remove Specific field ,using specific key ,method and values and update_one()
mycol.delete_one({'name':'Jeevan'})
print("Deleted the record :Jeevan")
print()


    """
    #Output:- 
    
PS C:\Users\Dell\Desktop> python mongo.py
MongoClient(host=['localhost:27017'], document_class=dict, tz_aware=False, connect=True)
{'_id': ObjectId('6360cb97174b8dfd1619ee90'), 'name': 'Sham', 'age': 30}

{'_id': ObjectId('6360cb97174b8dfd1619ee91'), 'name': 'Ram', 'age': 40}

{'_id': ObjectId('6360cb97174b8dfd1619ee92'), 'name': 'Lakhan', 'age': 50}

{'_id': ObjectId('6360cb97174b8dfd1619ee93'), 'name': 'Sumit', 'age': 20}

{'_id': ObjectId('6360cb97174b8dfd1619ee94'), 'name': 'Jeevan', 'age': 21}

{'_id': ObjectId('6360cb97174b8dfd1619ee95'), 'name': 'Samarth', 'age': 23}

find Specific field ,using specific key and value:
{'_id': ObjectId('6360cb97174b8dfd1619ee93'), 'name': 'Sumit', 'age': 20}

Updated the record

Deleted the record :Jeevan

PS C:\Users\Dell\Desktop>
    

PS C:\Users\Dell\Desktop> mongo
Current Mongosh Log ID: 6360cbe3d25151a2f9a9b483
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.0
Using MongoDB:          6.0.2
Using Mongosh:          1.6.0

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2022-11-01T10:18:24.357+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

------
   Enable MongoDB's free cloud-based monitoring service, which will then receive and display
   metrics about your deployment (disk utilization, CPU, operation statistics, etc).

   The monitoring data will be available on a MongoDB website with a unique URL accessible to you
   and anyone you share the URL with. MongoDB may use this information to make product
   improvements and to suggest MongoDB products and deployment options to you.

   To enable free monitoring, run the following command: db.enableFreeMonitoring()
   To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
------

test> show dbs
11db         80.00 KiB
admin        40.00 KiB
config      108.00 KiB
db11         40.00 KiB
local        72.00 KiB
mydatabase   72.00 KiB
mydb        112.00 KiB
test> use mydb
switched to db mydb

mydb> db.Students.find({}).pretty()
[
  { _id: ObjectId("6360cb97174b8dfd1619ee90"), name: 'Sham', age: 30 },
  { _id: ObjectId("6360cb97174b8dfd1619ee91"), name: 'Ram', age: 40 },
  {
    _id: ObjectId("6360cb97174b8dfd1619ee92"),
    name: 'Lakhan',
    age: 50
  },
  { _id: ObjectId("6360cb97174b8dfd1619ee93"), name: 'Sumit', age: 20 },
  {
    _id: ObjectId("6360cb97174b8dfd1619ee95"),
    name: 'Samarth',
    age: 21
  }
]
mydb>
    """